name: buildx

on:
  push:
  pull_request:

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prepare
        run: |
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386,linux/ppc64le,linux/s390x

          VERSION=${GITHUB_REF#refs/*/}
          TAGS="erseco/${REPO_NAME}:${VERSION}"

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAGS="$TAGS,erseco/${REPO_NAME}:latest"
          fi
          if [[ $VERSION == "master" ]]; then
            TAGS="$TAGS,erseco/${REPO_NAME}:beta"
          fi

          echo ::set-output name=platforms::${DOCKER_PLATFORMS}
          echo ::set-output name=tags::${TAGS}

        env:
          REPO_NAME: ${{ github.event.repository.name }}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        # with:
        #   install: true

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        run: |
          docker buildx build .

      - name: Test
        run: |
          docker-compose version
          docker-compose --file docker-compose.test.yml up --exit-code-from sut --timeout 10 --build

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prepare.outputs.tags }}
          platforms: ${{ steps.prepare.outputs.platforms }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          short-description: ${{ github.event.repository.description }}

